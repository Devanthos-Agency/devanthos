---
import Footer from "@/components/interfaces/Footer.astro";
import { ClientRouter } from "astro:transitions";
import SEO from "@/components/interfaces/SEO.astro";
interface Preload {
    as: string;
    href: string;
    type: string;
    rel?: "preload" | "prefetch";
    crossorigin?: string;
}

interface Props {
    title: string;
    description: string;
    preload?: Array<Preload>;
    canonical?: string;
    image?: string;
}

const { title, description, preload, canonical, image } = Astro.props;

import "@/styles/global.css";
import "@/styles/marquee.css";
import Navbar from "@/components/interfaces/Header";
---

<script is:inline>
    const getThemePreference = () => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    };

    const applyTheme = (theme) => {
        const isDark = theme === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    };

    // Aplicar tema inicial
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
        });
    }

    // Manejar navegaciones de Astro para preservar el tema
    document.addEventListener("astro:before-swap", () => {
        const currentTheme = getThemePreference();
        // Guardar el tema antes del swap
        window._preservedTheme = currentTheme;
    });

    document.addEventListener("astro:after-swap", () => {
        // Restaurar el tema después del swap
        if (window._preservedTheme) {
            applyTheme(window._preservedTheme);
        }
    });

    document.addEventListener("astro:page-load", () => {
        // Asegurar que el tema correcto esté aplicado
        const currentTheme = getThemePreference();
        applyTheme(currentTheme);
    });
</script>

<html lang="es">
    <head>
        <SEO
            canonical={canonical}
            description={description}
            image={image}
            preload={preload}
            title={title}
        />
        <ClientRouter />
    </head>
    <body class="relative font-ibm-plex-sans -z-30 bg-background">
        <Navbar client:load />
        <main class="relative antialiased">
            <div
                class="absolute -z-20 h-full w-full bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px] [mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_70%,transparent_100%)] dark:bg-[radial-gradient(#1f2937_1px,transparent_1px)] dark:[mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_70%,transparent_100%)]"
            >
            </div>
            <slot />

            <Footer />
        </main>
    </body>
</html>
